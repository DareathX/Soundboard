<Application x:Class="Soundboard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Soundboard"
             StartupUri="MainWindow/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <Style x:Key="ButtonWithImageHover" TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="OverridesDefaultStyle"
                        Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="BorderBrush"
                                            Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FF3E4147"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonHoverTitleBar" TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="#25272B"/>
                <Setter Property="FontWeight"
                        Value="bold"/>
                <Setter Property="OverridesDefaultStyle"
                        Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="BorderBrush"
                                            Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FF3E4147"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonHover" TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="#FF2D2F34"/>
                <Setter Property="FontWeight"
                        Value="bold"/>
                <Setter Property="OverridesDefaultStyle"
                        Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="BorderBrush"
                                            Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FF3E4147"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridHover"
                   TargetType="{x:Type DataGridCell}">
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="BorderBrush"
                        Value="Transparent"/>
                <Setter Property="BorderThickness"
                        Value="0"/>
                <Setter Property="FontWeight"
                        Value="bold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" 
                             Value="True">
                        <Setter Property="Background"
                                Value="#FF42464D"/>
                        <Setter Property="Foreground"
                                Value="Black"/>
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin"
                             Value="True">
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="{x:Type MenuItem}"
                   TargetType="{x:Type MenuItem}">
                <Setter Property="FontWeight"
                        Value="Bold"/>
                <Setter Property="OverridesDefaultStyle"
                        Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="hover"
                                    BorderThickness="0">
                                <ContentPresenter ContentSource="Header"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted"
                                         Value="True">
                                    <Setter Property="Background"
                                            TargetName="hover"
                                            Value="#FF42464D"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border Background="#36393F" CornerRadius="7, 7, 8, 8" BorderBrush="DarkGray" BorderThickness="2">
                                <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border Name="Border" >
                    <Grid>
                        <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                    </Grid>
                </Border>
            </ControlTemplate>
            <Style TargetType="CheckBox">
                <Setter Property="OverridesDefaultStyle"
                        Value="True"/>
                <Setter Property="BorderBrush"
                        Value="LightGray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="CheckBorder"
                                            Width="15"
                                            Height="15"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            ClipToBounds="True">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="5"
                                                              ShadowDepth="2"/>
                                        </Border.Effect>
                                        <Path x:Name="CheckMark"
                                              Width="8"
                                              Height="8"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M 0 0 L 8 8 M 0 8 L 8 0"
                                              Stretch="Fill"
                                              Stroke="LightGray"
                                              StrokeEndLineCap="Round"
                                              StrokeStartLineCap="Round"
                                              StrokeThickness="2"/>
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="4,0,0,0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="false">
                                    <Setter TargetName="CheckMark"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Setter Property="BorderBrush"
                                            Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="BorderBrush"
                                            Value="Gray"/>
                                    <Setter TargetName="CheckMark"
                                            Property="Stroke"
                                            Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
